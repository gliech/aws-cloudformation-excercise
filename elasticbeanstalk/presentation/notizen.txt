 X Environment:            SQS, Loadbalancer (classic, application, network)

-> Configuration Options:  - Am insteressantesten für uns
                           - Schon erwähnt bei Version und Environment
                           - Was lässt sich konfigurieren?

 X Configuration Options:  SingleInstance interessant, weil mehr als Variablen
                           geändert werden müssen

 X .ebextensions:          - CloudFormation::Init Meta Type
                           - Resources gut für Bastion Host, Ansible Server,
                             nicht Datenbank

 X Configuration Template: Vererbung bei der Definition in Cloudformation eher
                           unerwünscht

-> Down the Rabbit Hole:   Ziel ist, das Ergebnis der EB-CLI in Cloudformation
                           zu reproduzieren

 X Down the Rabbit Hole: http://elasticbeanstalk-env-resources-eu-west-1.s3.amazonaws.com/eb_snippets/rds/rds.json
                         http://elasticbeanstalk-env-resources-eu-west-1.s3.amazonaws.com/eb_snippets/single_instance.yaml


Fazit

Jetzt:   - mächtiges Werkzeug für Entwickler
         - schränkt Administratoren & Systemarchitekten ein:
            - erweiterbar, aber nicht umschreibbar
            - klare Linie anderer Amazon Cloud Services fehlt
Zukunft: - interessant, wenn wir "Templates" selbst schreiben könnten
            - wie custom platforms für das Netzwerk
            - Entwickler könnten durch die so geschaffene Schnittstelle freier
              mit von uns geschriebenen Netzwerkarchitekturen umgehen
         - unwahrscheinlich, dass das bald, wenn überhaupt eintrifft
            - "Templates" werden von Amazon selbst uneinheitlich eingesetzt
            - hohes Zerstörungspotenzial

